def evaluate(x):
    return -x**2 + 4*x

def hill_climbing(start_point, step, max_iters):
    current_best = start_point
    best_value = evaluate(current_best)

    for _ in range(max_iters):
        candidates = [current_best + step, current_best - step]
        next_best = max(candidates, key=evaluate)

        if evaluate(next_best) > best_value:
            current_best, best_value = next_best, evaluate(next_best)
        else:
            break

    return current_best, best_value

# Start from a fixed point (0)
best_x, best_value = hill_climbing(start_point=0, step=0.1, max_iters=100)

print("Optimal x:", round(best_x, 2))
print("Maximum function value:", round(best_value, 2))

hill climbing
