class DFSTraversal:
    def __init__(self, V):
        self.adj = [[] for _ in range(V)]
        self.visited = [False] * V

    def insert_edge(self, src, dest):
        self.adj[src].append(dest)

    def dfs(self, vertex):
        self.visited[vertex] = True
        print(vertex, end=" ")
        for n in self.adj[vertex]:
            if not self.visited[n]:
                self.dfs(n)

if __name__ == "__main__":
    graph = DFSTraversal(8)
    graph.insert_edge(0, 1)
    graph.insert_edge(0, 2)
    graph.insert_edge(0, 3)
    graph.insert_edge(1, 3)
    graph.insert_edge(2, 4)
    graph.insert_edge(3, 5)
    graph.insert_edge(3, 6)
    graph.insert_edge(4, 7)
    graph.insert_edge(4, 5)
    graph.insert_edge(5, 2)

    print("Depth First Traversal for the graph is:")
    graph.dfs(0)
